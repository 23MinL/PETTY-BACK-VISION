name: Deploy to Oracle Cloud

on:
  push:
    branches: [ main, feat/prod ]  # feat/prod 브랜치 추가
  pull_request:
    branches: [ main ]
    types: [ closed ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: Create deployment package
        run: |
          mkdir -p deploy
          cp build/libs/*.jar deploy/petty-app.jar

      - name: Deploy to Oracle Cloud
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            # 애플리케이션 중지
            sudo systemctl stop petty-app || true
            
            # 백업 생성
            if [ -f /home/ubuntu/petty-app/app/petty-app.jar ]; then
              cp /home/ubuntu/petty-app/app/petty-app.jar /home/ubuntu/petty-app/app/petty-app.jar.backup
            fi
            
            # 새 JAR 파일 대기
            echo "Waiting for new JAR file..."

      - name: Copy JAR file
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: "deploy/petty-app.jar"
          target: "/home/ubuntu/petty-app/app/"
          strip_components: 1

      - name: Start application
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            # 환경 변수 파일 업데이트 (prod 설정에 맞춤)
            cat > /home/ubuntu/petty-app/.env << EOF
            SPRING_PROFILES_ACTIVE=prod
            
            # Database
            DB_SUPABASE_URL=${{ secrets.DB_SUPABASE_URL }}
            DB_SUPABASE_USERNAME=${{ secrets.DB_SUPABASE_USERNAME }}
            DB_SUPABASE_PASSWORD=${{ secrets.DB_SUPABASE_PASSWORD }}
            DB_AIVEN_URL=${{ secrets.DB_AIVEN_URL }}
            DB_AIVEN_USERNAME=${{ secrets.DB_AIVEN_USERNAME }}
            DB_AIVEN_PASSWORD=${{ secrets.DB_AIVEN_PASSWORD }}
            
            # JWT
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            JWT_EXPIRATION_TIME=3600000
            
            # OAuth
            OAUTH_GITHUB_CLIENT_ID=${{ secrets.OAUTH_GITHUB_CLIENT_ID }}
            OAUTH_GITHUB_CLIENT_SECRET=${{ secrets.OAUTH_GITHUB_CLIENT_SECRET }}
            OAUTH_KAKAO_CLIENT_ID=${{ secrets.OAUTH_KAKAO_CLIENT_ID }}
            OAUTH_KAKAO_CLIENT_SECRET=${{ secrets.OAUTH_KAKAO_CLIENT_SECRET }}
            OAUTH_KAKAO_REDIRECT_URI=${{ secrets.OAUTH_KAKAO_REDIRECT_URI }}
            
            # Email
            EMAIL_USERNAME=${{ secrets.EMAIL_USERNAME }}
            EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }}
            
            # AWS
            AWS_REGION=${{ secrets.AWS_REGION }}
            AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
            
            # Supabase
            SUPABASE_URL=${{ secrets.SUPABASE_URL }}
            SUPABASE_KEY=${{ secrets.SUPABASE_KEY }}
            SUPABASE_BUCKET=${{ secrets.SUPABASE_BUCKET }}
            
            # OpenAI
            OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
            
            # Qdrant
            QDRANT_HOST=${{ secrets.QDRANT_HOST }}
            QDRANT_PORT=${{ secrets.QDRANT_PORT }}
            QDRANT_COLLECTION=${{ secrets.QDRANT_COLLECTION }}
            QDRANT_API_KEY=${{ secrets.QDRANT_API_KEY }}
            
            # Vision APIs
            GEMINI_VISION_URL=${{ secrets.GEMINI_VISION_URL }}
            GEMINI_VISION_KEY=${{ secrets.GEMINI_VISION_KEY }}
            TOGETHER_VISION_URL=${{ secrets.TOGETHER_VISION_URL }}
            TOGETHER_VISION_KEY=${{ secrets.TOGETHER_VISION_KEY }}
            
            # Chat APIs
            GEMINI_CHAT_URL=${{ secrets.GEMINI_CHAT_URL }}
            GEMINI_CHAT_KEY=${{ secrets.GEMINI_CHAT_KEY }}
            TOGETHER_CHAT_MODEL=${{ secrets.TOGETHER_CHAT_MODEL }}
            TOGETHER_CHAT_URL=${{ secrets.TOGETHER_CHAT_URL }}
            TOGETHER_CHAT_KEY=${{ secrets.TOGETHER_CHAT_KEY }}
            
            # Tour API
            TOUR_API_BASE_URL=${{ secrets.TOUR_API_BASE_URL }}
            TOUR_API_SERVICE_KEY=${{ secrets.TOUR_API_SERVICE_KEY }}
            TOUR_API_MOBILE_OS=${{ secrets.TOUR_API_MOBILE_OS }}
            TOUR_API_MOBILE_APP=${{ secrets.TOUR_API_MOBILE_APP }}
            TOUR_API_TYPE=${{ secrets.TOUR_API_TYPE }}
            EOF
            
            # 권한 설정
            chmod 600 /home/ubuntu/petty-app/.env
            
            # 애플리케이션 시작
            sudo systemctl start petty-app
            
            # 상태 확인
            sleep 10
            sudo systemctl status petty-app
            
            # 로그 확인 (마지막 20줄)
            sudo journalctl -u petty-app -n 20 --no-pager

      - name: Health Check
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            # 60초 동안 헬스체크 시도
            for i in {1..12}; do
              if curl -f http://localhost:8080/health > /dev/null 2>&1; then
                echo "Application is healthy!"
                exit 0
              fi
              echo "Attempt $i failed, waiting 5 seconds..."
              sleep 5
            done
            echo "Health check failed!"
            sudo journalctl -u petty-app -n 50 --no-pager
            exit 1